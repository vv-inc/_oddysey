it would be as simple as possible.
thinking a minimal language with only
two types - decimal and "signal",
which would be like a string.




commas are considered whitespace


breakpoint (at the beginning of a line)
!


"watch" (placed before an expression, would be overlay the value during operation)
@


comment (everything afterward would be ignored)
;

print to console
DBUG


simple math operations

ADD
SUB
MUL
NEG


variable referencing

:= NAME EXPR
NAME


comparison

EQ
NQ
LT
GT


null

NIL


conditional (basically a switch)

(COND
  EXPR EXPR
  EXPR (EXPR
        EXPR))


signals (signals are basically string literals delimited by *)

*SIGNAL CONTENTS*

SEND expr expr
SEND *ASTRO 1*, *ERROR*, *OUT OF RANGE*
SEND *CTRL UNIT*, 22, 33, 51
RECV *ANY*, *BIO ALERT*
:= FUEL RECV *TANK1*, *LEVEL*

loops (either loops or gotos)

(LOOP
  EXPR
  EXPR
  STOP)
  
00 EXPR
10 (COND (EQ FUEL 0 (jmp 30)))
20 JMP 00
30 SEND *SPKR1* *NO FUEL*



that should be the entire language,
with nearly any combination of those
things possible
